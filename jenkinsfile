pipeline {
    //environment {
    //    DOCKERHUB_CREDS = credentials('dockerhub')
    //}
    agent any

    stages {
        stage('Clone Repo') {
            steps {
                checkout scm
                sh 'ls *'
            }
        }
        stage('Build Image') {
            steps {
                //sh 'docker build -t group3cna/test:$BUILD_NUMBER ./'
                sh 'docker compose up -d'
                echo "image build success"
            }
        }
        stage('Test image') {
            steps {
                //sh 'docker container create -p 5000:5000 group3cna/test:$BUILD_NUMBER'
                //sh 'docker run -d -p 5000:5000 group3cna/test:$BUILD_NUMBER'
                sh 'echo "Test image - success"'
            }
        }
        stage('Docker Login') {
            steps {
                //sh 'docker login -u $DOCKERHUB_CREDS_USR -p $DOCKERHUB_CREDS_PSW' (this will leave the password visible)
                //sh 'echo $DOCKERHUB_CREDS_PSW | docker login -u $DOCKERHUB_CREDS_USR --password-stdin'
                sh 'echo "Docker login - success"'
            }
        }
        stage('Docker Push') {
            steps {
                //sh 'docker push group3cna/test' (this will use the tag latest)    
                //sh 'docker push group3cna/test:$BUILD_NUMBER'
                //sh 'docker container stop $(docker container ls -aq)'
                //sh 'docker run -d -p 5000:5000 group3cna/test:$BUILD_NUMBER'
                sh 'echo "Docker push - success"'
            }
        }
        stage('Trigger ManifestUpdate') {
            steps {
                echo "triggering updatemanifestjob"
                //build job: 'updatemanifest', parameters: [string(name: 'DOCKERTAG', value: env.BUILD_NUMBER)]
            }
        }
    }
    post {
        always {
            //sh 'docker logout'
            echo 'Docker logout - success'
        }
    }
}
